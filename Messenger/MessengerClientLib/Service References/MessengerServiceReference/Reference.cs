//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.34209
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MessengerClientLib.MessengerServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/MessengerCoreLib.Components")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
//        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OnlineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Online {
            get {
                return this.OnlineField;
            }
            set {
                if ((this.OnlineField.Equals(value) != true)) {
                    this.OnlineField = value;
                    this.RaisePropertyChanged("Online");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Message", Namespace="http://schemas.datacontract.org/2004/07/MessengerCoreLib.Components")]
    [System.SerializableAttribute()]
    public partial class Message : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RecipientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SenderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RecipientId {
            get {
                return this.RecipientIdField;
            }
            set {
                if ((this.RecipientIdField.Equals(value) != true)) {
                    this.RecipientIdField = value;
                    this.RaisePropertyChanged("RecipientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SenderId {
            get {
                return this.SenderIdField;
            }
            set {
                if ((this.SenderIdField.Equals(value) != true)) {
                    this.SenderIdField = value;
                    this.RaisePropertyChanged("SenderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MessengerServiceReference.IMessengerCoreService")]
    public interface IMessengerCoreService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessengerCoreService/Login", ReplyAction="http://tempuri.org/IMessengerCoreService/LoginResponse")]
        MessengerClientLib.MessengerServiceReference.User Login(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessengerCoreService/Login", ReplyAction="http://tempuri.org/IMessengerCoreService/LoginResponse")]
        System.Threading.Tasks.Task<MessengerClientLib.MessengerServiceReference.User> LoginAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessengerCoreService/GetUsers", ReplyAction="http://tempuri.org/IMessengerCoreService/GetUsersResponse")]
        MessengerClientLib.MessengerServiceReference.User[] GetUsers(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessengerCoreService/GetUsers", ReplyAction="http://tempuri.org/IMessengerCoreService/GetUsersResponse")]
        System.Threading.Tasks.Task<MessengerClientLib.MessengerServiceReference.User[]> GetUsersAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessengerCoreService/GetUserName", ReplyAction="http://tempuri.org/IMessengerCoreService/GetUserNameResponse")]
        string GetUserName(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessengerCoreService/GetUserName", ReplyAction="http://tempuri.org/IMessengerCoreService/GetUserNameResponse")]
        System.Threading.Tasks.Task<string> GetUserNameAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessengerCoreService/GetMessages", ReplyAction="http://tempuri.org/IMessengerCoreService/GetMessagesResponse")]
        MessengerClientLib.MessengerServiceReference.Message[] GetMessages(int sender, int reciever);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessengerCoreService/GetMessages", ReplyAction="http://tempuri.org/IMessengerCoreService/GetMessagesResponse")]
        System.Threading.Tasks.Task<MessengerClientLib.MessengerServiceReference.Message[]> GetMessagesAsync(int sender, int reciever);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessengerCoreService/SendMessage", ReplyAction="http://tempuri.org/IMessengerCoreService/SendMessageResponse")]
        void SendMessage(MessengerClientLib.MessengerServiceReference.Message message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessengerCoreService/SendMessage", ReplyAction="http://tempuri.org/IMessengerCoreService/SendMessageResponse")]
        System.Threading.Tasks.Task SendMessageAsync(MessengerClientLib.MessengerServiceReference.Message message);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMessengerCoreServiceChannel : MessengerClientLib.MessengerServiceReference.IMessengerCoreService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MessengerCoreServiceClient : System.ServiceModel.ClientBase<MessengerClientLib.MessengerServiceReference.IMessengerCoreService>, MessengerClientLib.MessengerServiceReference.IMessengerCoreService {
        
        public MessengerCoreServiceClient() {
        }
        
        public MessengerCoreServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MessengerCoreServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MessengerCoreServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MessengerCoreServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MessengerClientLib.MessengerServiceReference.User Login(string username) {
            return base.Channel.Login(username);
        }
        
        public System.Threading.Tasks.Task<MessengerClientLib.MessengerServiceReference.User> LoginAsync(string username) {
            return base.Channel.LoginAsync(username);
        }
        
        public MessengerClientLib.MessengerServiceReference.User[] GetUsers(int userId) {
            return base.Channel.GetUsers(userId);
        }
        
        public System.Threading.Tasks.Task<MessengerClientLib.MessengerServiceReference.User[]> GetUsersAsync(int userId) {
            return base.Channel.GetUsersAsync(userId);
        }
        
        public string GetUserName(int userId) {
            return base.Channel.GetUserName(userId);
        }
        
        public System.Threading.Tasks.Task<string> GetUserNameAsync(int userId) {
            return base.Channel.GetUserNameAsync(userId);
        }
        
        public MessengerClientLib.MessengerServiceReference.Message[] GetMessages(int sender, int reciever) {
            return base.Channel.GetMessages(sender, reciever);
        }
        
        public System.Threading.Tasks.Task<MessengerClientLib.MessengerServiceReference.Message[]> GetMessagesAsync(int sender, int reciever) {
            return base.Channel.GetMessagesAsync(sender, reciever);
        }
        
        public void SendMessage(MessengerClientLib.MessengerServiceReference.Message message) {
            base.Channel.SendMessage(message);
        }
        
        public System.Threading.Tasks.Task SendMessageAsync(MessengerClientLib.MessengerServiceReference.Message message) {
            return base.Channel.SendMessageAsync(message);
        }
    }
}
